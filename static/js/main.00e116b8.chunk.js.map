{"version":3,"sources":["component/Contacts/ContactList.module.css","component/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/action-types.js","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","component/Contacts/ContactList.js","component/Form/Form.js","redux/filter/filter-actions.js","component/Filter/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/filter/filter-reducer.js","redux/store.js","index.js","component/Form/Form.module.css"],"names":["module","exports","removeContact","createAction","name","number","payload","id","uuidv4","fetchContactsApi","a","axios","get","data","defaults","baseURL","getContacts","createAsyncThunk","jsonServerApi","contacts","addContact","contact","post","then","contactId","delete","getContactsFromState","state","entities","getFilterFromState","filter","ContactList","useSelector","dispatch","useDispatch","useEffect","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","className","css","list","map","listItem","btn","type","onClick","Form","onSubmit","useState","setName","setNumber","handleInputChange","e","currentTarget","value","preventDefault","form","label","input","onChange","pattern","title","required","button","Filter","App","contactsSlice","createSlice","initialState","isLoading","error","extraReducers","fulfilled","action","pending","rejected","filterReducer","createReducer","store","configureStore","reducer","devTools","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00e116b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2k7pT\",\"listItem\":\"ContactList_listItem__3X_Mj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2vGuj\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n import { ADD_CONTACT, REMOVE_CONTACT } from \"../action-types.js\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n    payload: { name, number, id: uuidv4() },\r\n}));\r\n\r\nexport const removeContact = createAction(REMOVE_CONTACT);\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\n\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\n\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');","export const ADD_CONTACT = \"contacts/addContact\";\r\nexport const FILTER = \"contacts/filter\";\r\nexport const REMOVE_CONTACT = \"contacts/removeContact\";","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:3030';\r\n\r\nexport async function fetchContactsApi() {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n}\r\n\r\nexport const addContact = (contact) => {\r\n  return axios.post(\"/contacts\", contact).then(({ data }) => data);\r\n};\r\n\r\nexport const deleteContact = (contactId) => {\r\n  return axios.delete(`/contacts/${contactId}`);\r\n};","import * as jsonServerApi from \"../../services/contacts-api\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await jsonServerApi.fetchContactsApi();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async ({ name, number }) => {\r\n    const contacts = await jsonServerApi.addContact({ name, number });\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const removeContact = createAsyncThunk(\r\n  \"contacts/removeContact\",\r\n  async (id) => {\r\n    await jsonServerApi.deleteContact(id);\r\n    return id;\r\n  }\r\n);","export const getContactsFromState = (state) => state.contacts.entities;\r\nexport const getFilterFromState = (state) => state.filter;","\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\r\nimport { getContacts }  from \"../../redux/contacts/contacts-operations\";\r\nimport { getContactsFromState, getFilterFromState } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nimport css from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getContactsFromState);\r\n  const filter = useSelector(getFilterFromState);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n   function getVisibleContacts() {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n  \r\n  return (\r\n    <ul className={css.list}>\r\n       {visibleContacts &&\r\n        visibleContacts.map(({ id, name, number }) => (\r\n          <li className={css.listItem} key={id}>\r\n            {`${name}: ${number}`}\r\n            <button\r\n              className={css.btn}\r\n              type=\"button\"\r\n              onClick={() => dispatch(removeContact(id))}\r\n            >\r\n              delete\r\n            </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState  } from \"react\";\nimport {useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport css from \"./Form.module.css\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    \n   switch (name) {\n     case \"name\":\n       setName(value);\n       break;\n     case \"number\":\n       setNumber(value);\n       break;\n     \n     default:\n       return;\n   }\n };\n  \nconst handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n \n    return (\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.input}\n            value={number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          add Contact\n        </button>\n      </form>\n    );\n}","import { createAction } from \"@reduxjs/toolkit\";\r\nimport {FILTER} from '../action-types.js';\r\n\r\nexport const filter = createAction(FILTER);","import { useDispatch, useSelector } from \"react-redux\";\nimport { filter } from \"../../redux/filter/filter-actions.js\";\nimport css from \"../Filter/Filter.module.css\";\n\n\nexport default function Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n   <label className={css.label}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={(e) => dispatch(filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}","import ContactList from \"./component/Contacts/ContactList\";\r\nimport Form from \"./component/Form/Form\";\r\nimport Filter from \"./component/Filter/Filter\";\r\n\r\nimport css from \"./App.css\";\r\n\r\n\r\nexport default function App() {\r\n\r\n       return (\r\n      <>\r\n        <h1 className={css}>Phonebook</h1>\r\n        <Form />\r\n        <h2 className={css}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList/>\r\n      </>\r\n  );\r\n}\r\n ","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getContacts, addContact, removeContact } from \"./contacts-operations\";\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: { entities: [], isLoading: false, error: null },\r\n  extraReducers: {\r\n    [getContacts.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      entities: action.payload,\r\n      isLoading: false,\r\n    }),\r\n    [getContacts.pending]: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    [getContacts.rejected]: (state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n\r\n    [addContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      entities: [...state.entities, action.payload],\r\n      isLoading: false,\r\n    }),\r\n    [addContact.pending]: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    [addContact.rejected]: (state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n\r\n    [removeContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      entities: state.entities.filter(({ id }) => id !== action.payload),\r\n      isLoading: false,\r\n    }),\r\n    [removeContact.pending]: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    [removeContact.rejected]: (state) => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filter } from \"./filter-actions.js\";\r\n\r\nexport const filterReducer = createReducer(\"\", { [filter]: (state, action) => action.payload, });","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsSlice  from \"./contacts/contacts-reduser.js\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { filterReducer} from \"./filter/filter-reducer.js\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: contactsSlice,\r\n         filter: filterReducer,\r\n    },\r\n    devTools: composeWithDevTools,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux/store';\nimport \"./index.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3sG3Y\",\"button\":\"Form_button__2RrVB\"};"],"sourceRoot":""}