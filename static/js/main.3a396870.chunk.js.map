{"version":3,"sources":["component/Contacts/ContactList.module.css","component/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/action-types.js","component/Contacts/ContactList.js","component/Form/Form.js","redux/filter/filter-actions.js","component/Filter/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/filter/filter-reducer.js","redux/store.js","index.js","component/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","removeContact","ContactList","contacts","useSelector","state","items","filter","dispatch","useDispatch","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","className","css","list","map","listItem","btn","type","onClick","Form","onSubmit","useState","setName","setNumber","handleInputChange","e","currentTarget","value","preventDefault","form","label","input","onChange","pattern","title","required","button","Filter","App","contactsReducer","createReducer","find","alert","filterReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a396870.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2k7pT\",\"listItem\":\"ContactList_listItem__3X_Mj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2vGuj\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { ADD_CONTACT, REMOVE_CONTACT } from \"../action-types.js\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n    payload: { name, number, id: uuidv4() },\r\n}));\r\n\r\nexport const removeContact = createAction(REMOVE_CONTACT);","export const ADD_CONTACT = \"App/addContact\";\r\nexport const FILTER = \"App/filter\";\r\nexport const REMOVE_CONTACT = \"App/removeContact\";","\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-actions.js\";\r\nimport css from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector((state) => state.items);\r\n  const filter = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n  \r\n  function getVisibleContacts() {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n  \r\n  return (\r\n    <ul className={css.list}>\r\n       {visibleContacts &&\r\n        visibleContacts.map(({ id, name, number }) => (\r\n          <li className={css.listItem} key={id}>\r\n            {`${name}: ${number}`}\r\n            <button\r\n              className={css.btn}\r\n              type=\"button\"\r\n              onClick={() => dispatch(removeContact(id))}\r\n            >\r\n              delete\r\n            </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState  } from \"react\";\nimport {useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-actions.js\";\nimport css from \"./Form.module.css\";\n\nexport default function Form({ onSubmit }) {\n  \n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    \n   switch (name) {\n     case \"name\":\n       setName(value);\n       break;\n     case \"number\":\n       setNumber(value);\n       break;\n     \n     default:\n       return;\n   }\n };\n  \nconst handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n \n    return (\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.input}\n            value={number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          add Contact\n        </button>\n      </form>\n    );\n}","import { createAction } from \"@reduxjs/toolkit\";\r\nimport {FILTER} from '../action-types.js';\r\n\r\nexport const filter = createAction(FILTER);","import { useDispatch, useSelector } from \"react-redux\";\nimport { filter } from \"../../redux/filter/filter-actions.js\";\nimport css from \"../Filter/Filter.module.css\";\n\n\nexport default function Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n   <label className={css.label}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={(e) => dispatch(filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}","import ContactList from \"./component/Contacts/ContactList\";\r\nimport Form from \"./component/Form/Form\";\r\nimport Filter from \"./component/Filter/Filter\";\r\n\r\nimport css from \"./App.css\";\r\n\r\n\r\nexport default function App() {\r\n\r\n       return (\r\n      <>\r\n        <h1 className={css}>Phonebook</h1>\r\n        <Form />\r\n        <h2 className={css}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList/>\r\n      </>\r\n  );\r\n}\r\n ","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact } from \"./contacts-actions\";\r\n\r\nexport const contactsReducer = createReducer([], {\r\n    [addContact]: (state, { payload }) => {\r\n        let duplicate = state.find((contact) => contact.name === payload.name);\r\n        if (duplicate) {\r\n            alert(`this contact already exists`);\r\n            return state;\r\n        } else {\r\n            return [...state, payload];\r\n        }\r\n    },\r\n    [removeContact]: (state, { payload }) => state.filter((contact) => contact.id !== payload),\r\n});","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filter } from \"./filter-actions.js\";\r\n\r\nexport const filterReducer = createReducer(\"\", { [filter]: (state, action) => action.payload, });","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { contactsReducer } from \"./contacts/contacts-reduser.js\";\r\nimport { filterReducer} from \"./filter/filter-reducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n    items: contactsReducer,\r\n    filter: filterReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport \"./index.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3sG3Y\",\"button\":\"Form_button__2RrVB\"};"],"sourceRoot":""}